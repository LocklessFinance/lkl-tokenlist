/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import {BytesLike} from "@ethersproject/bytes";
import {Listener, Provider} from "@ethersproject/providers";
import {FunctionFragment, EventFragment, Result} from "@ethersproject/abi";

interface ILKLStakingInterface extends ethers.utils.Interface {
  functions: {
    "add(address,uint256,bool,bool)": FunctionFragment;
    "authorize(address)": FunctionFragment;
    "deposit(address,uint256,uint256)": FunctionFragment;
    "poolLength()": FunctionFragment;
    "withdraw(address,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "add",
    values: [string, BigNumberish, boolean, boolean]
  ): string;
  encodeFunctionData(functionFragment: "authorize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "deposit",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "poolLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "add", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "authorize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "poolLength", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;

  events: {};
}

export class ILKLStaking extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ILKLStakingInterface;

  functions: {
    add(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "add(address,uint256,bool,bool)"(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    authorize(
      _who: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "authorize(address)"(
      _who: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deposit(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deposit(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    poolLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    "poolLength()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    withdraw(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdraw(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  add(
    _underlyingToken: string,
    _expiration: BigNumberish,
    _needStake: boolean,
    _withUpdate: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "add(address,uint256,bool,bool)"(
    _underlyingToken: string,
    _expiration: BigNumberish,
    _needStake: boolean,
    _withUpdate: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  authorize(_who: string, overrides?: Overrides): Promise<ContractTransaction>;

  "authorize(address)"(
    _who: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deposit(
    _user: string,
    _pid: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deposit(address,uint256,uint256)"(
    _user: string,
    _pid: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  poolLength(overrides?: CallOverrides): Promise<BigNumber>;

  "poolLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  withdraw(
    _user: string,
    _pid: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdraw(address,uint256,uint256)"(
    _user: string,
    _pid: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    add(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "add(address,uint256,bool,bool)"(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    authorize(_who: string, overrides?: CallOverrides): Promise<void>;

    "authorize(address)"(
      _who: string,
      overrides?: CallOverrides
    ): Promise<void>;

    deposit(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "deposit(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    poolLength(overrides?: CallOverrides): Promise<BigNumber>;

    "poolLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    withdraw(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdraw(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    add(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "add(address,uint256,bool,bool)"(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    authorize(_who: string, overrides?: Overrides): Promise<BigNumber>;

    "authorize(address)"(
      _who: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deposit(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deposit(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    poolLength(overrides?: CallOverrides): Promise<BigNumber>;

    "poolLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    withdraw(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdraw(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    add(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "add(address,uint256,bool,bool)"(
      _underlyingToken: string,
      _expiration: BigNumberish,
      _needStake: boolean,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    authorize(
      _who: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "authorize(address)"(
      _who: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deposit(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deposit(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    poolLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "poolLength()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    withdraw(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdraw(address,uint256,uint256)"(
      _user: string,
      _pid: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
