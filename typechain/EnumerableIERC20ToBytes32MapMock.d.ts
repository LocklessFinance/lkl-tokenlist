/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import {BytesLike} from "@ethersproject/bytes";
import {Listener, Provider} from "@ethersproject/providers";
import {FunctionFragment, EventFragment, Result} from "@ethersproject/abi";

interface EnumerableIERC20ToBytes32MapMockInterface
  extends ethers.utils.Interface {
  functions: {
    "at(uint256)": FunctionFragment;
    "contains(address)": FunctionFragment;
    "get(address,uint256)": FunctionFragment;
    "length()": FunctionFragment;
    "remove(address)": FunctionFragment;
    "set(address,bytes32)": FunctionFragment;
    "unchecked_at(uint256)": FunctionFragment;
    "unchecked_indexOf(address)": FunctionFragment;
    "unchecked_setAt(uint256,bytes32)": FunctionFragment;
    "unchecked_valueAt(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "at", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "contains", values: [string]): string;
  encodeFunctionData(
    functionFragment: "get",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "length", values?: undefined): string;
  encodeFunctionData(functionFragment: "remove", values: [string]): string;
  encodeFunctionData(
    functionFragment: "set",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unchecked_at",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unchecked_indexOf",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "unchecked_setAt",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unchecked_valueAt",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "at", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "contains", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "get", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "remove", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "set", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unchecked_at",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unchecked_indexOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unchecked_setAt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unchecked_valueAt",
    data: BytesLike
  ): Result;

  events: {
    "OperationResult(bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OperationResult"): EventFragment;
}

export class EnumerableIERC20ToBytes32MapMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: EnumerableIERC20ToBytes32MapMockInterface;

  functions: {
    at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    contains(key: string, overrides?: CallOverrides): Promise<[boolean]>;

    "contains(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    get(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "get(address,uint256)"(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    length(overrides?: CallOverrides): Promise<[BigNumber]>;

    "length()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    remove(key: string, overrides?: Overrides): Promise<ContractTransaction>;

    "remove(address)"(
      key: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    set(
      key: string,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "set(address,bytes32)"(
      key: string,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unchecked_at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    "unchecked_at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    unchecked_indexOf(
      key: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "unchecked_indexOf(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    unchecked_setAt(
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unchecked_setAt(uint256,bytes32)"(
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unchecked_valueAt(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & {value: string}>;

    "unchecked_valueAt(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & {value: string}>;
  };

  at(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string] & {key: string; value: string}>;

  "at(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string] & {key: string; value: string}>;

  contains(key: string, overrides?: CallOverrides): Promise<boolean>;

  "contains(address)"(key: string, overrides?: CallOverrides): Promise<boolean>;

  get(
    key: string,
    errorCode: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "get(address,uint256)"(
    key: string,
    errorCode: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  length(overrides?: CallOverrides): Promise<BigNumber>;

  "length()"(overrides?: CallOverrides): Promise<BigNumber>;

  remove(key: string, overrides?: Overrides): Promise<ContractTransaction>;

  "remove(address)"(
    key: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  set(
    key: string,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "set(address,bytes32)"(
    key: string,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unchecked_at(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string] & {key: string; value: string}>;

  "unchecked_at(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string] & {key: string; value: string}>;

  unchecked_indexOf(key: string, overrides?: CallOverrides): Promise<BigNumber>;

  "unchecked_indexOf(address)"(
    key: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  unchecked_setAt(
    index: BigNumberish,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unchecked_setAt(uint256,bytes32)"(
    index: BigNumberish,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unchecked_valueAt(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "unchecked_valueAt(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    contains(key: string, overrides?: CallOverrides): Promise<boolean>;

    "contains(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    get(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "get(address,uint256)"(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    length(overrides?: CallOverrides): Promise<BigNumber>;

    "length()"(overrides?: CallOverrides): Promise<BigNumber>;

    remove(key: string, overrides?: CallOverrides): Promise<void>;

    "remove(address)"(key: string, overrides?: CallOverrides): Promise<void>;

    set(
      key: string,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "set(address,bytes32)"(
      key: string,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    unchecked_at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    "unchecked_at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & {key: string; value: string}>;

    unchecked_indexOf(
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "unchecked_indexOf(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unchecked_setAt(
      index: BigNumberish,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "unchecked_setAt(uint256,bytes32)"(
      index: BigNumberish,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    unchecked_valueAt(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "unchecked_valueAt(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    OperationResult(result: null): EventFilter;
  };

  estimateGas: {
    at(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    contains(key: string, overrides?: CallOverrides): Promise<BigNumber>;

    "contains(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get(address,uint256)"(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    length(overrides?: CallOverrides): Promise<BigNumber>;

    "length()"(overrides?: CallOverrides): Promise<BigNumber>;

    remove(key: string, overrides?: Overrides): Promise<BigNumber>;

    "remove(address)"(key: string, overrides?: Overrides): Promise<BigNumber>;

    set(
      key: string,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "set(address,bytes32)"(
      key: string,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unchecked_at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "unchecked_at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unchecked_indexOf(
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "unchecked_indexOf(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unchecked_setAt(
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "unchecked_setAt(uint256,bytes32)"(
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unchecked_valueAt(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "unchecked_valueAt(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    contains(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "contains(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get(address,uint256)"(
      key: string,
      errorCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    length(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "length()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    remove(key: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    "remove(address)"(
      key: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    set(
      key: string,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "set(address,bytes32)"(
      key: string,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unchecked_at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "unchecked_at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unchecked_indexOf(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "unchecked_indexOf(address)"(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unchecked_setAt(
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unchecked_setAt(uint256,bytes32)"(
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unchecked_valueAt(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "unchecked_valueAt(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
