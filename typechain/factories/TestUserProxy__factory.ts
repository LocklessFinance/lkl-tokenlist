/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, BytesLike} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import type {TestUserProxy} from "../TestUserProxy";

export class TestUserProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _weth: string,
    _trancheFactory: string,
    _trancheBytecodeHash: BytesLike,
    overrides?: Overrides
  ): Promise<TestUserProxy> {
    return super.deploy(
      _weth,
      _trancheFactory,
      _trancheBytecodeHash,
      overrides || {}
    ) as Promise<TestUserProxy>;
  }
  getDeployTransaction(
    _weth: string,
    _trancheFactory: string,
    _trancheBytecodeHash: BytesLike,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _weth,
      _trancheFactory,
      _trancheBytecodeHash,
      overrides || {}
    );
  }
  attach(address: string): TestUserProxy {
    return super.attach(address) as TestUserProxy;
  }
  connect(signer: Signer): TestUserProxy__factory {
    return super.connect(signer) as TestUserProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUserProxy {
    return new Contract(address, _abi, signerOrProvider) as TestUserProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trancheFactory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_trancheBytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "position",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "deriveTranche",
    outputs: [
      {
        internalType: "contract ITranche",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_position",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "who",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct UserProxy.PermitData[]",
        name: "_permitCallData",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newState",
        type: "bool",
      },
    ],
    name: "setIsFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_position",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountPT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountYT",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "who",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct UserProxy.PermitData[]",
        name: "_permitCallData",
        type: "tuple[]",
      },
    ],
    name: "withdrawWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040526002805460ff191690553480156200001b57600080fd5b5060405162001ab838038062001ab88339810160408190526200003e91620000d0565b600080546001600160a01b0319163390811790915583908390839062000064906200008c565b6001600160601b0319606093841b81166080529190921b1660a05260c0525062000110915050565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b80516001600160a01b0381168114620000cb57600080fd5b919050565b600080600060608486031215620000e5578283fd5b620000f084620000b3565b92506200010060208501620000b3565b9150604084015190509250925092565b60805160601c60a05160601c60c051611950620001686000396000610fd601526000610fb201526000818160f30152818161041e0152818161058001528181610a3401528181610ca00152610d5901526119506000f3fe6080604052600436106100d65760003560e01c806364eda74b1161007f578063b6a5d7de11610059578063b6a5d7de1461023b578063b841d2d21461025b578063b91816111461027c578063fe9fbb801461029c5761011f565b806364eda74b146101e65780636f1ea24c146102065780638da5cb5b146102265761011f565b806327c97fa5116100b057806327c97fa51461018f57806333eeb147146101af5780633fc8cef3146101d15761011f565b80630a08ca67146101245780630fcc0c281461015a57806313af40351461016f5761011f565b3661011f573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461011d57600080fd5b005b600080fd5b34801561013057600080fd5b5061014461013f366004611260565b6102bc565b6040516101519190611538565b60405180910390f35b34801561016657600080fd5b5061011d6102cf565b34801561017b57600080fd5b5061011d61018a366004611244565b610312565b34801561019b57600080fd5b5061011d6101aa366004611244565b610390565b3480156101bb57600080fd5b506101c4610413565b60405161015191906115fe565b3480156101dd57600080fd5b5061014461041c565b3480156101f257600080fd5b5061011d61020136600461128b565b610440565b34801561021257600080fd5b5061011d6102213660046113af565b610496565b34801561023257600080fd5b50610144610b0e565b34801561024757600080fd5b5061011d610256366004611244565b610b2a565b61026e610269366004611420565b610b6d565b60405161015192919061185c565b34801561028857600080fd5b506101c4610297366004611244565b610ef4565b3480156102a857600080fd5b506101c46102b7366004611244565b610f09565b60006102c88383610f38565b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461030f5760405162461bcd60e51b815260040161030690611640565b60405180910390fd5b33ff5b60005473ffffffffffffffffffffffffffffffffffffffff1633146103495760405162461bcd60e51b815260040161030690611640565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c75760405162461bcd60e51b815260040161030690611640565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60025460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b61044933610f09565b6104655760405162461bcd60e51b815260040161030690611677565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60025460ff16156104b95760405162461bcd60e51b8152600401610306906117f8565b8181808060200260200160405190810160405280939291908181526020016000905b82821015610507576104f860e083028601368190038101906112df565b815260200190600101906104db565b5050505050805160001461057e5760005b815181101561057c5761056a82828151811061055d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015161103b565b8061057481611882565b915050610518565b505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063391906112c3565b73ffffffffffffffffffffffffffffffffffffffff16146106665760405162461bcd60e51b8152600401610306906116e5565b8415158061067357508315155b61068f5760405162461bcd60e51b8152600401610306906116ae565b600061069b8789610f38565b90506000808088156107f9576040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516906323b872dd906106fd90339030908e90600401611559565b602060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f91906112a7565b506040517f884e17f300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063884e17f3906107a4908c903090600401611838565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190611397565b92505b87156109d75760008473ffffffffffffffffffffffffffffffffffffffff1663764b666c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561084757600080fd5b505afa15801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f91906112c3565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8216906323b872dd906108d890339030908e90600401611559565b602060405180830381600087803b1580156108f257600080fd5b505af1158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a91906112a7565b506040517f1210aac200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861690631210aac29061097f908c903090600401611838565b6040805180830381600087803b15801561099857600080fd5b505af11580156109ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d0919061147c565b9093509150505b88156109fa57826109fa5760405162461bcd60e51b81526004016103069061171c565b8715610a1d5781610a1d5760405162461bcd60e51b815260040161030690611753565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016632e1a7d4d82610a64858761186a565b610a6e919061186a565b6040518263ffffffff1660e01b8152600401610a8a919061182f565b600060405180830381600087803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b503392506108fc9150839050610ace858761186a565b610ad8919061186a565b6040518115909202916000818181858888f19350505050158015610b00573d6000803e3d6000fd5b505050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b615760405162461bcd60e51b815260040161030690611640565b610b6a816110d1565b50565b600254600090819060ff1615610b955760405162461bcd60e51b8152600401610306906117f8565b8383808060200260200160405190810160405280939291908181526020016000905b82821015610be357610bd460e083028601368190038101906112df565b81526020019060010190610bb7565b50505050508051600014610c4d5760005b8151811015610c4b57610c3982828151811061055d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80610c4381611882565b915050610bf4565b505b73ffffffffffffffffffffffffffffffffffffffff881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610deb57883414610c9e5760405162461bcd60e51b8152600401610306906117c1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d0657600080fd5b505af1158015610d1a573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb9250610d93915089908d906004016115d8565b602060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de591906112a7565b50610eb3565b3415610e095760405162461bcd60e51b815260040161030690611609565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916906323b872dd90610e5f9033908a908e90600401611559565b602060405180830381600087803b158015610e7957600080fd5b505af1158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb191906112a7565b505b600080610ec08989611123565b915091508a811015610ee45760405162461bcd60e51b81526004016103069061178a565b909a909950975050505050505050565b60016020526000908152604090205460ff1681565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff165b919050565b6000808383604051602001610f4e92919061149f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020918201209250600091610ffc917fff00000000000000000000000000000000000000000000000000000000000000917f00000000000000000000000000000000000000000000000000000000000000009186917f000000000000000000000000000000000000000000000000000000000000000091016114d4565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012095945050505050565b806000015173ffffffffffffffffffffffffffffffffffffffff1663d505accf338360200151846040015185606001518660c0015187608001518860a001516040518863ffffffff1660e01b815260040161109c979695949392919061158a565b600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b5050505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b60008060006111328486610f38565b6040517f85f45c8800000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8216906385f45c8890611187903390600401611538565b6040805180830381600087803b1580156111a057600080fd5b505af11580156111b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d8919061147c565b92509250505b9250929050565b8035610f33816118ea565b60008083601f840112611201578182fd5b50813567ffffffffffffffff811115611218578182fd5b60208301915083602060e0830285010111156111de57600080fd5b803560ff81168114610f3357600080fd5b600060208284031215611255578081fd5b81356102c8816118ea565b60008060408385031215611272578081fd5b823561127d816118ea565b946020939093013593505050565b60006020828403121561129c578081fd5b81356102c88161190c565b6000602082840312156112b8578081fd5b81516102c88161190c565b6000602082840312156112d4578081fd5b81516102c8816118ea565b600060e082840312156112f0578081fd5b60405160e0810181811067ffffffffffffffff82111715611338577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b604052611344836111e5565b8152611352602084016111e5565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261138b60c08401611233565b60c08201529392505050565b6000602082840312156113a8578081fd5b5051919050565b60008060008060008060a087890312156113c7578182fd5b8635955060208701356113d9816118ea565b94506040870135935060608701359250608087013567ffffffffffffffff811115611402578283fd5b61140e89828a016111f0565b979a9699509497509295939492505050565b60008060008060008060a08789031215611438578182fd5b86359550602087013561144a816118ea565b9450604087013593506060870135611461816118ea565b9250608087013567ffffffffffffffff811115611402578283fd5b6000806040838503121561148e578182fd5b505080516020909101519092909150565b60609290921b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000168252601482015260340190565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff97881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6020808252600b908201527f4e6f6e2070617961626c65000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604082015260600190565b60208082526015908201527f53656e646572206e6f7420417574686f72697a65640000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420776974686472617700000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f6e207765746820746f6b656e000000000000000000000000000000000000604082015260600190565b60208082526006908201527f5275676765640000000000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f207969656c64206163637275656400000000000000000000000000000000604082015260600190565b60208082526011908201527f4e6f7420656e6f756768206d696e746564000000000000000000000000000000604082015260600190565b60208082526019908201527f496e636f727265637420616d6f756e742070726f766964656400000000000000604082015260600190565b6020808252600f908201527f436f6e74726163742066726f7a656e0000000000000000000000000000000000604082015260600190565b90815260200190565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b918252602082015260400190565b6000821982111561187d5761187d6118bb565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118b4576118b46118bb565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610b6a57600080fd5b8015158114610b6a57600080fdfea2646970667358221220dafaa6daec53671aff12e4b09316ac423ad37e20210d43ad2284b3789ef97d5164736f6c63430008000033";
