/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import type {TimeStamp} from "../TimeStamp";

export class TimeStamp__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TimeStamp> {
    return super.deploy(overrides || {}) as Promise<TimeStamp>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TimeStamp {
    return super.attach(address) as TimeStamp;
  }
  connect(signer: Signer): TimeStamp__factory {
    return super.connect(signer) as TimeStamp__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeStamp {
    return new Contract(address, _abi, signerOrProvider) as TimeStamp;
  }
}

const _abi = [
  {
    inputs: [],
    name: "blockTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060a48061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063557ed1ba1460375780636f891f8214603f575b600080fd5b603d6059565b005b6045605f565b604051605091906065565b60405180910390f35b42600055565b60005481565b9081526020019056fea2646970667358221220ec2ffdd22c9d10f1445ab26418b9b68d403b4de530b88a6cca8fee15451254ea64736f6c63430008000033";
