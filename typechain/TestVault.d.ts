/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import {BytesLike} from "@ethersproject/bytes";
import {Listener, Provider} from "@ethersproject/providers";
import {FunctionFragment, EventFragment, Result} from "@ethersproject/abi";

interface TestVaultInterface extends ethers.utils.Interface {
  functions: {
    "pool()": FunctionFragment;
    "registerPool(uint8)": FunctionFragment;
    "registerTokens(bytes32,address[],address[])": FunctionFragment;
    "setPool(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "pool", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "registerPool",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "registerTokens",
    values: [BytesLike, string[], string[]]
  ): string;
  encodeFunctionData(functionFragment: "setPool", values: [string]): string;

  decodeFunctionResult(functionFragment: "pool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "registerPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPool", data: BytesLike): Result;

  events: {};
}

export class TestVault extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TestVaultInterface;

  functions: {
    pool(overrides?: CallOverrides): Promise<[string]>;

    "pool()"(overrides?: CallOverrides): Promise<[string]>;

    registerPool(
      arg0: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerPool(uint8)"(
      arg0: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    registerTokens(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerTokens(bytes32,address[],address[])"(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPool(_pool: string, overrides?: Overrides): Promise<ContractTransaction>;

    "setPool(address)"(
      _pool: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  pool(overrides?: CallOverrides): Promise<string>;

  "pool()"(overrides?: CallOverrides): Promise<string>;

  registerPool(
    arg0: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerPool(uint8)"(
    arg0: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  registerTokens(
    arg0: BytesLike,
    arg1: string[],
    arg2: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerTokens(bytes32,address[],address[])"(
    arg0: BytesLike,
    arg1: string[],
    arg2: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPool(_pool: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setPool(address)"(
    _pool: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    pool(overrides?: CallOverrides): Promise<string>;

    "pool()"(overrides?: CallOverrides): Promise<string>;

    registerPool(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "registerPool(uint8)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    registerTokens(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "registerTokens(bytes32,address[],address[])"(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    setPool(_pool: string, overrides?: CallOverrides): Promise<void>;

    "setPool(address)"(_pool: string, overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    pool(overrides?: CallOverrides): Promise<BigNumber>;

    "pool()"(overrides?: CallOverrides): Promise<BigNumber>;

    registerPool(arg0: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "registerPool(uint8)"(
      arg0: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    registerTokens(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "registerTokens(bytes32,address[],address[])"(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPool(_pool: string, overrides?: Overrides): Promise<BigNumber>;

    "setPool(address)"(
      _pool: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    pool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "pool()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registerPool(
      arg0: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerPool(uint8)"(
      arg0: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    registerTokens(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerTokens(bytes32,address[],address[])"(
      arg0: BytesLike,
      arg1: string[],
      arg2: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPool(
      _pool: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPool(address)"(
      _pool: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
